<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
The goal of the NUnit2Report task is to merge the individual XML files generated by the NUnit2 task and apply a stylesheet on the resulting merged document to provide a browsable report of the testcases results.
 
This project is host on Sourceforge http://sourceforge.net/projects/nunit2report/
 
NUnit2Report is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. 
-->
<!--
   This XSL File is based on the NUnitSummary.xsl
   template created by Tomas Restrepo fot NAnt's NUnitReport.
   
   Modified by Gilles Bayon (gilles.bayon@laposte.net) for use
   with NUnit2Report.

-->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0" xmlns:html="http://www.w3.org/Profiles/XHTML-transitional">

   <xsl:output method="html" indent="yes"/>
   <xsl:include href="toolkit.xsl"/>
	<xsl:preserve-space elements="a root"/>


<!--
	====================================================
		Create the page structure
    ====================================================
-->
<xsl:template match="test-results">
	<HTML>
		<HEAD>
		<style type="text/css">
			BODY {
			font:normal 68% verdana,arial,helvetica;
			color:#000000;
			}
			TD {
			FONT-SIZE: 68%
			}
			P {
			line-height:1.5em;
			margin-top:0.5em; margin-bottom:1.0em;
			}
			H1 {
			MARGIN: 0px 0px 5px; FONT: 165% verdana,arial,helvetica
			}
			H2 {
			MARGIN-TOP: 1em; MARGIN-BOTTOM: 0.5em; FONT: bold 125% verdana,arial,helvetica
			}
			H3 {
			MARGIN-BOTTOM: 0.5em; FONT: bold 115% verdana,arial,helvetica
			}
			H4 {
			MARGIN-BOTTOM: 0.5em; FONT: bold 100% verdana,arial,helvetica
			}
			H5 {
			MARGIN-BOTTOM: 0.5em; FONT: bold 100% verdana,arial,helvetica
			}
			H6 {
			MARGIN-BOTTOM: 0.5em; FONT: bold 100% verdana,arial,helvetica
			}	
         .Error {
            font-weight:bold; background:#EEEEE0; color:purple;
         }
         .Failure {
            font-weight:bold; background:#EEEEE0; color:red;
         }
         .FailureDetail {
            font-size: -1;
            padding-left: 2.0em;
         }
         .Pass {
            background:#EEEEE0;
         }
         .TableHeader {
            background: #6699cc;
            color: white;
            font-weight: bold;
            horizontal-align: center;
         }
         .EnvInfoHeader {
            background: #ff0000;
            color: white;
            font-weight: bold;
            horizontal-align: center;
         }
         .EnvInfoRow {
            background:#EEEEE0
         }
         
         A:visited {
            color: #0000ff;
         }
         A {
            color: #0000ff;
         }
         A:active {
            color: #800000;
         }
			</style>
      <script language="JavaScript"><![CDATA[   
        function toggle (field)
        {
          field.style.display = (field.style.display == "block") ? "none" : "block";
        }  ]]> 
      </script>
		</HEAD>
		<body text="#000000" bgColor="#ffffff">
			<a name="#top"/>
			<xsl:call-template name="header"/>
			
			<!-- Summary part -->
			<xsl:call-template name="summary"/>
			<hr size="1" width="95%" align="left"/>
			
			<!-- Package List part -->
			<xsl:call-template name="packagelist"/>
			<hr size="1" width="95%" align="left"/>
			
			<!-- For each testsuite create the part -->
			<xsl:call-template name="testsuites"/>
			<hr size="1" width="95%" align="left"/>
			
			<!-- Environment info part -->
 			
			<xsl:call-template name="envinfo"/>

		</body>
	</HTML>
</xsl:template>
	
	
	
	<!-- ================================================================== -->
	<!-- Write a list of all packages with an hyperlink to the anchor of    -->
	<!-- of the package name.                                               -->
	<!-- ================================================================== -->
	<xsl:template name="packagelist">	
		<h2 id=":i18n:TestSuiteSummary">TestSuite Summary</h2>
		<table border="0" cellpadding="5" cellspacing="2" width="95%">
			<xsl:call-template name="packageSummaryHeader"/>
			<!-- list all packages recursively -->
			<xsl:for-each select="//test-suite[(child::results/test-case)]">
				<xsl:sort select="@name"/>
				<xsl:variable name="testCount" select="count(child::results/test-case)"/>
				<xsl:variable name="errorCount" select="count(child::results/test-case[@executed='False'])"/>
				<xsl:variable name="failureCount" select="count(child::results/test-case[@success='False'])"/>
				<xsl:variable name="timeCount" select="concat(substring-before(@time,','),'.',substring-after(@time,','))"/>
		
				<!-- write a summary for the package -->
				<tr valign="top">
					<!-- set a nice color depending if there is an error/failure -->
					<xsl:attribute name="class">
						<xsl:choose>
						    <xsl:when test="$failureCount &gt; 0">Failure</xsl:when>
							<xsl:when test="$errorCount &gt; 0"> Error</xsl:when>
							<xsl:otherwise>Pass</xsl:otherwise>
						</xsl:choose>
					</xsl:attribute> 	
					<td><a href="#{generate-id(@name)}"><xsl:value-of select="@name"/></a></td>
					<td><xsl:value-of select="$testCount"/>
					</td>
					<td><xsl:value-of select="$errorCount"/></td>
					<td><xsl:value-of select="$failureCount"/></td>
					<td>
                       <xsl:call-template name="display-time">
                        	<xsl:with-param name="value" select="$timeCount"/>
                        </xsl:call-template>				
					</td>					
				</tr>
			</xsl:for-each>
		</table>		
	</xsl:template>
	

	<xsl:template name="testsuites">
	   <script language="JScript"><![CDATA[
	      function ToggleRow(id) {
	         if ( id.style.display == "none" )
	            id.style.display = "block";
	         else 
	            id.style.display = "none";
	      }
	   ]]></script>
	   
		<xsl:for-each select="//test-suite[(child::results/test-case)]">
			<xsl:sort select="@name"/>
			<!-- create an anchor to this class name -->
			<a name="#{generate-id(@name)}"/>
			<h3>TestSuite <xsl:value-of select="@name"/></h3>

			<table border="0" cellpadding="5" cellspacing="2" width="95%">
				<!-- Header -->
				<xsl:call-template name="classesSummaryHeader"/>

				<!-- match the testcases of this package -->
				<xsl:apply-templates select="results/test-case">
				   <xsl:sort select="@name"/> 
				</xsl:apply-templates>
			</table>
			<a href="#top" id=":i18n:Backtotop">Back to top</a>
		</xsl:for-each>
	</xsl:template>
	

  <xsl:template name="dot-replace">
	  <xsl:param name="package"/>
	  <xsl:choose>
		  <xsl:when test="contains($package,'.')"><xsl:value-of select="substring-before($package,'.')"/>_<xsl:call-template name="dot-replace"><xsl:with-param name="package" select="substring-after($package,'.')"/></xsl:call-template></xsl:when>
		  <xsl:otherwise><xsl:value-of select="$package"/></xsl:otherwise>
	  </xsl:choose>
  </xsl:template>

</xsl:stylesheet>