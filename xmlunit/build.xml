<?xml version="1.0"?>
<!--
   Licensed to the XMLUnit developers under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   This file is licensed to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="xmlunit" default="test" basedir=".">

  <!-- allow properties to be overridden in a properties file -->
  <property file="build.properties"/>

  <!-- Version -->
  <property name="xmlunit.version" value="2.0alpha"/>

  <!-- some locations -->
  <property name="src.dir" value="src/main"/>
  <property name="test.dir" value="src/tests"/>
  <property name="build.dir" location="build/java"/>
  <property name="lib.dir" value="${build.dir}/lib"/>
  <property name="core.out.dir" value="${build.dir}/core-classes"/>
  <property name="legacy.out.dir" value="${build.dir}/legacy-classes"/>
  <property name="test.out.dir" value="${build.dir}/test-classes"/>
  <property name="userguide.out.dir" value="${build.dir}/ug-classes"/>
  <property name="test.report.dir" value="${build.dir}/test-report"/>
  <property name="dist.dir" value="${build.dir}/dist"/>
  <property name="docs.dir" value="${build.dir}/doc"/>
  <property name="userguide.docs.dir" value="${docs.dir}/userguide"/>

  <!-- javac properties -->
  <property name="javac.source" value="5"/>
  <property name="javac.target" value="5"/>
  <property name="javac.debug" value="true"/>

  <!-- junit task properties -->
  <property name="junit.fork" value="yes"/>

  <!-- Docbook related properties, macros and targets -->
  <import file="docbook.xml"/>

  <target name="-props">
    <available property="regexp.present" classname="java.util.regex.Matcher"/>
  </target>

  <target name="-init" depends="-props">
    <mkdir dir="${lib.dir}"/>
    <mkdir dir="${core.out.dir}"/>
    <mkdir dir="${legacy.out.dir}"/>
    <mkdir dir="${test.out.dir}"/>
    <mkdir dir="${test.report.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${docs.dir}"/>
    <mkdir dir="${userguide.docs.dir}"/>
  </target>

  <target name="clean"
    description="removes created directories">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${lib.dir}"/>
      <fileset dir="${core.out.dir}"/>
      <fileset dir="${legacy.out.dir}"/>
      <fileset dir="${test.out.dir}"/>
      <fileset dir="${test.report.dir}"/>
      <fileset dir="${dist.dir}"/>
      <fileset dir="${docs.dir}"/>
      <fileset dir="${userguide.docs.dir}"/>
      <fileset dir="${build.dir}"/>
    </delete> 
  </target>

  <target name="compile-core" depends="-init"
          description="compiles legacy sources and tests">
    <javac srcdir="${src.dir}/java-core" destdir="${core.out.dir}"
           debug="${javac.debug}" target="${javac.target}"
           source="${javac.source}">
    </javac>
  </target>

  <target name="compile" depends="compile-core"
    description="compiles legacy sources and tests">
    <javac srcdir="${src.dir}/java-legacy" destdir="${legacy.out.dir}"
      debug="${javac.debug}" target="${javac.target}" source="${javac.source}">
      <classpath>
        <pathelement location="${core.out.dir}"/>
        <pathelement path="${java.class.path}"/>
        <fileset dir="lib" includes="*.jar"/>
      </classpath>
      <exclude name="**/*XPathRegexAssert.java" unless="regexp.present"/>
    </javac>
    <javac srcdir="${test.dir}/java-legacy" destdir="${test.out.dir}"
      debug="${javac.debug}" target="${javac.target}" source="${javac.source}">
      <classpath>
        <pathelement location="${core.out.dir}"/>
        <pathelement location="${legacy.out.dir}"/>
        <pathelement path="${java.class.path}"/>
        <fileset dir="lib" includes="*.jar"/>
      </classpath>
      <exclude name="**/*XPathRegexAssert.java" unless="regexp.present"/>
    </javac>
  </target>

  <target name="test" depends="compile"
    description="runs the tests">
    <junit printsummary="yes" haltonfailure="no" fork="${junit.fork}"
      forkMode="perBatch" failureproperty="tests.failed">
      <sysproperty key="basedir" value="${basedir}"/>
      <sysproperty key="user.dir" value="${basedir}"/>
      <!--
          <sysproperty key="javax.xml.parsers.DocumentBuilderFactory"
            value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl"/>
          <sysproperty key="javax.xml.parsers.SAXParserFactory"
            value="org.apache.xerces.jaxp.SAXParserFactoryImpl"/>
          <sysproperty key="javax.xml.transform.TransformerFactory"
        value="org.apache.xalan.processor.TransformerFactoryImpl"/>
        -->
      <classpath>
        <pathelement location="${core.out.dir}"/>
        <pathelement location="${legacy.out.dir}"/>
        <pathelement location="${test.out.dir}"/>
        <pathelement path="${java.class.path}"/>
        <fileset dir="lib" includes="*.jar"/>
      </classpath>
      <formatter type="xml"/>
      <batchtest todir="${test.report.dir}">
        <fileset dir="${test.dir}/java-legacy">
          <include name="**/test_*.java"/>
        </fileset>
      </batchtest>
    </junit>

    <junitreport todir="${test.report.dir}">
      <fileset dir="${test.report.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.report.dir}/html"/>
    </junitreport>

    <fail if="tests.failed">Some tests failed</fail>
  </target>

  <target name="docs"
    depends="create-users-guide,javadocs,-site"
    description="creates the documentation bundle"/>

  <target name="javadocs" depends="-init"
    description="creates the API documentation">
    <delete includeEmptyDirs="true" dir="${docs.dir}/api"/>
    <javadoc destdir="${docs.dir}/api"
      overview="${src.dir}/java-legacy/overview.html"
      windowtitle="XMLUnit Documentation"
      footer="&lt;p&gt;&lt;a href=&quot;http://xmlunit.sourceforge.net/&quot;&gt;XMLUnit&lt;/a&gt; is hosted by sourceforge.net&lt;/p&gt;">
      <group title="XMLUnit v${xmlunit.version}"
        packages="org.custommonkey.xmlunit*"/>
      <fileset dir="${src.dir}/java-legacy">
        <include name="org/custommonkey/**/*.java"/>
      </fileset>
      <classpath>
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${java.class.path}"/>
      </classpath>
    </javadoc>
  </target>

  <target name="-site" depends="-init">
    <copy todir="${docs.dir}">
      <fileset dir="${src.dir}/site">
        <include name="*.html"/>
        <include name="*.png"/>
      </fileset>
    </copy>
  </target>

  <target name="jar" depends="compile"
    description="creates jar, Maven2 POM and Ivy file">
    <jar jarfile="${lib.dir}/xmlunit-core-${xmlunit.version}.jar"
       basedir="${core.out.dir}"
    />
    <jar jarfile="${lib.dir}/xmlunit-legacy-${xmlunit.version}.jar"
       basedir="${legacy.out.dir}"
    />
    <jar jarfile="${lib.dir}/xmlunit-sumo-${xmlunit.version}.jar">
      <fileset dir="${core.out.dir}"/>
      <fileset dir="${legacy.out.dir}"/>
    </jar>

    <tstamp> 	 
      <format property="ivy.publication.datetime" pattern="yyyyMMddHHmmss"/>
    </tstamp>

    <copy todir="${lib.dir}">
      <fileset dir="${src.dir}/etc">
        <include name="xmlunit.pom"/>
        <include name="xmlunit-ivy.xml"/>
        <include name="xmlunit-maven-metadata.xml"/>
      </fileset>
      <mapper type="glob" from="xmlunit*" to="xmlunit-${xmlunit.version}*"/>
      <filterset>
        <filter token="VERSION" value="${xmlunit.version}"/>
        <filter token="DATE" value="${ivy.publication.datetime}"/>
        <filter token="DESCRIPTION" value="XMLUnit compares a control XML document to a test document or the result of a transformation, validates documents, and compares the results of XPath expressions."/>
        <filter token="LICENSE" value="BSD License"/>
        <filter token="LICENSE_URL" value="http://xmlunit.svn.sourceforge.net/viewvc/*checkout*/xmlunit/trunk/xmlunit/LICENSE.txt"/>
        <filter token="GROUP" value="xmlunit"/>
        <filter token="ARTIFACT" value="xmlunit"/>
        <filter token="TYPE" value="jar"/>
      </filterset>
    </copy>
  </target>

  <target name="Gump" depends="test,jar"/>

  <target name="bindist" depends="jar,test,docs">
    <zip zipfile="${dist.dir}/xmlunit-${xmlunit.version}-bin.zip">
      <zipfileset prefix="xmlunit-${xmlunit.version}/lib"
        dir="${lib.dir}"/>
      <zipfileset prefix="xmlunit-${xmlunit.version}/docs"
        dir="${docs.dir}"/>
      <zipfileset prefix="xmlunit-${xmlunit.version}" dir=".">
        <include name="KEYS"/>
        <include name="LICENSE.txt"/>
        <include name="README.txt"/>
      </zipfileset>
    </zip>
  </target>

  <target name="srcdist" depends="-init,create-users-guide">
    <zip zipfile="${dist.dir}/xmlunit-${xmlunit.version}-src.zip">
      <zipfileset prefix="xmlunit-${xmlunit.version}" dir=".">
        <include name="*.xml"/>
        <include name="${src.dir}/"/>
        <include name="${test.dir}/"/>
        <include name="KEYS"/>
        <include name="LICENSE.txt"/>
        <include name="README.txt"/>
        <exclude name="**/csharp/**"/>
      </zipfileset>
      <zipfileset dir="${userguide.docs.dir}"
        prefix="xmlunit-${xmlunit.version}/userguide"/>
    </zip>
  </target>

  <target name="dist"
    depends="clean,bindist,srcdist,compile-userguide-examples"
    description="creates the distribution files">
    <checksum algorithm="md5">
      <fileset dir="${dist.dir}">
        <include name="*.zip"/>
      </fileset>
    </checksum>
    <checksum algorithm="sha1">
      <fileset dir="${dist.dir}">
        <include name="*.zip"/>
      </fileset>
    </checksum>
  </target>

  <target name="compile-userguide-examples" depends="compile">
    <mkdir dir="${userguide.out.dir}"/>
    <javac srcdir="src/user-guide" includes="org/"
      destdir="${userguide.out.dir}" source="1.3" target="1.2">
      <classpath>
        <pathelement location="${legacy.out.dir}"/>
      </classpath>
    </javac>
    <delete dir="${userguide.out.dir}"/>
  </target>
</project>
